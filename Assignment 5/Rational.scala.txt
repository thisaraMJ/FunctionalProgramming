object Rational extends App{

    val r1 = new Rational(1, 2)
    val r2 = r1.neg
    
    println("r1 is " + r1)
    println("r2 = r1.neg is " + r2)

    val x = new Rational (1, 2)
    val y = new Rational (2, 3)
    val z = new Rational (-4, 5)
    
    println();
    println("x is " + x)
    println("y is " + y)
    println("z is " + z)
    println("x - y - z is " + (x-y-z))
}

class Rational(x:Int, y:Int){
    require(y > 0, "Denominator should be greater than 0.")
    def numer = x/gcd(x, y)
    def denom = y/gcd(x, y)

    private def gcd(a:Int, b:Int):Int= if(b==0) math.abs(a) else gcd(b, a%b)
    override def toString= numer+"/"+denom
    def neg= new Rational(-this.numer,this.denom)
    def +(r:Rational)= new Rational(this.numer*r.denom + this.denom*r.numer,this.denom*r.denom)
    def -(r:Rational)= this + r.neg
}